from vkbottle.bot import Message, Blueprint
from sqlighter import SQLighter
from tools import get_uid
from .keyboard import accounts, keyboard_cancel
from .state import ImportState

db = SQLighter('db.db')
bp = Blueprint('importaccount')

async def importaccount(event):
    await bp.api.messages.send(user_id=event.object.user_id, message='üì≤–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω(—Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π /me –∏–∑ –±–æ—Ç–∞ –î–∏—Å–∫–æ—Ä–¥ –∏–ª–∏ –¢–µ–ª–µ–≥—Ä–∞–º)', keyboard = keyboard_cancel, random_id=0)
    await bp.state_dispenser.set(event.object.user_id, ImportState.INTOKEN)

@bp.on.private_message(state=ImportState.INTOKEN)
async def _(message: Message):
    if db.user_exists(token=message.text):
        await message.answer('‚è±–ù–∞—á–∏–Ω–∞—é –∏–º–ø–æ—Ä—Ç. –ñ–¥–∏—Ç–µ!')
        user_accounts = db.get_account_user(token=message.text)
        for account in user_accounts:
            db.add_account_id(get_uid(message.from_id), account)
        keyboard = await accounts(get_uid(message.from_id))
        await message.answer('‚úÖ–ì–æ—Ç–æ–≤–æ!–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –≤ –º–µ–Ω—é', keyboard=keyboard)
    else:
        keyboard = await accounts(get_uid(message.from_id))
        await message.answer('‚ùå–Ø –Ω–µ –Ω–∞—à–µ–ª —Ç–∞–∫–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –≤ –±–∞–∑–µ', keyboard=keyboard)